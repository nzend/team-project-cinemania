{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-39452ae9299cc1fd.js","src/js/index.js","src/js/oopsnotification.js","src/js/render_weeklytrends.js","node_modules/@parcel/runtime-js/lib/runtime-9d8fc285121c8bde.js","src/js/upcoming-this-mounth.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"9p9yL\\\":\\\"index.da91c2a4.js\\\",\\\"5SXwj\\\":\\\"sprite-stars.020edb1a.svg\\\",\\\"k7SKl\\\":\\\"my-library.4653df68.js\\\",\\\"45zUA\\\":\\\"index.c8eaf707.js\\\"}\"));","// Тут додаємо імпорт готового модулю за зразком:\nimport * as mobilMenu from './mobile-menu';\nimport * as switcher from './switcher';\n// import * as moduleName from './js/module-name';\nimport * as oopsnotification from './oopsnotification';\n\nimport * as WeeklyTrends from './render_weeklytrends';\nimport * as upcomingMounth from '../js/upcoming-this-mounth';\nimport * as modal from './modal-info/modal-info';\n","\nconst notificationBtnClose = document.querySelector(`.notification-trailer-fail-btn-close`);\nconst notification = document.querySelector(`.notification-trailer-fail`);\nconst notificationTrailerFailOverlay = document.querySelector(`.notification-trailer-fail-overlay`);\n\n//!дата атрибут та слухач на кнопку для відкриття модалки\nconst trailerFailBtn = document.querySelector('button[data-btn=\"trailer-fail\"]');\ntrailerFailBtn.addEventListener(`click`, onOpenModalBtnClick);\n\nfunction onOpenModalBtnClick(){\n       notificationTrailerFailOverlay.style.visibility= \"visible\";\n       notificationTrailerFailOverlay.style.transition=\"visibility 250ms linear 250ms\";\n    notificationBtnClose.addEventListener(`click`, onNotificationTrailerFailBtnClick);\n    notificationTrailerFailOverlay.addEventListener(`click`, onNotificationTrailerFailOverlay);\n    function onNotificationTrailerFailOverlay(event) {\n        if (event.currentTarget === event.target) {\n          onCloseModal();\n        }\n      }\n     document.addEventListener(\"keydown\", onEscKeyPress); \n            \n}\n\nfunction  onNotificationTrailerFailBtnClick (){\n    onCloseModal();\n}\n\nfunction onCloseModal() {\n    notificationTrailerFailOverlay.style.visibility= \"hidden\";\n  }\n\n  function onEscKeyPress(event) {\n    if (event.code !== 'Escape') {\n      return;\n    }\n    document.removeEventListener('keydown', onEscKeyPress);\n    onCloseModal();\n  }\n    \n\n\n","'use strict';\n\nimport sprite from '../../src/images/sprite-stars.svg';\nimport { getNameOfGenresById } from './get-genres';\nimport * as Api from './api';\n// import * as moduleName from './js/module-name';\n\nconst filmList = document.querySelector('.weekly');\n\n// функція яка перевіряє ширину екрану, якщо менше 768px то завантажує тільки один фільм\nfunction renderWeeklyFilms() {\n  if (window.innerWidth < 768) {\n    Api.getWeekTrending(1).then(data => {\n      const films = [data.results[0]];\n      creatMarkupCatalogCard(films)\n        .then(data => (filmList.innerHTML = data))\n        .catch(error => console.log(error));\n    });\n  } else {\n    Api.getWeekTrending(1).then(data => {\n      const films = data.results.slice(0, 3);\n      creatMarkupCatalogCard(films)\n        .then(data => (filmList.innerHTML = data))\n        .catch(error => console.log(error));\n    });\n  }\n}\n\nwindow.addEventListener('resize', renderWeeklyFilms);\nrenderWeeklyFilms();\n\nasync function creatMarkupCatalogCard(data) {\n  const markUp = data.reduce((markup, film) => markup + makeCard(film), '');\n  return markUp;\n}\n\nfunction makeCard({\n  id,\n  poster_path,\n  title,\n  name,\n  genre_ids,\n  release_date,\n  first_air_date,\n  vote_average,\n}) {\n  const arrOfGenres = getNameOfGenresById(genre_ids);\n  let stringOfGenres = arrOfGenres.slice(0, 2).join(', ');\n  const date = release_date || first_air_date;\n  const mediaQuery = window.matchMedia(\n    '(min-width: 768px) and (max-width: 1199px)'\n  );\n\n  // На таблетці відображає один жанр\n  if (mediaQuery.matches) {\n    stringOfGenres = arrOfGenres.slice(0, 1).join(', ');\n  }\n\n  // Якшо строка жанрів більша, рендерити один жанр\n  if (stringOfGenres.length > 18)\n    stringOfGenres = arrOfGenres.slice(0, 1).join(', ');\n\n  // const currentGenres = () => {\n  //   if (window.innerWidth < 1280) {\n  //     return stringOfGenres[0];\n  //   }\n  //   return stringOfGenres.join(', ');\n  // };\n\n  // window.addEventListener('resize', () => {\n  //   currentGenres();\n  // });\n\n  return `<li class=\"catalog__card\" data-id=\"${id}\">\n  <div class=\"catalog__img-wrapper\">\n    <img src=\"https://image.tmdb.org/t/p/w500${\n      poster_path || 'Oops. There is no poster to this movie'\n    }\" alt=\"${name || title}\" width=\"395\" height=\"574\" class=\"catalog__img\" />\n  </div>\n  <div class=\"catalog__info info\">\n    <p class=\"info__title\">${name || title}</p>\n<div class=\"info__wrap\">\n<ul class=\"info__list\">\n    <li class=\"info__descr\">${stringOfGenres}</li>\n    <li class=\"info__descr\">${convertReleaseDate(date)}</li>\n    </ul>\n<div class=\"catalog__stars-wrap\">\n<div class=\"catalog__rating-active\" style=\"width:${\n    vote_average / 2 / 0.05\n  }%\"></div>\n</div>\n</div>\n  </div>\n</li>`;\n}\n\nfunction convertReleaseDate(date) {\n  if (date) {\n    return date.slice(0, 4);\n  } else return '';\n}\n","module.exports = require('./helpers/bundle-url').getBundleURL('9p9yL') + require('./helpers/bundle-manifest').resolve(\"5SXwj\");","import * as Api from './api';\nimport { setGenresInStorage } from './get-genres';\nimport { getNameOfGenresById } from './get-genres';\nimport { setAddedMovies } from './local-storage';\nimport { getAddedMovies } from './local-storage';\n\nconst container = document.querySelector('.upcoming-content');\n\nApi.getUpcoming()\n  .then(({ results }) => {\n    const NOW_Date = new Date();\n\n    const filmUpcomingRelease = results.filter(\n      film => NOW_Date < Date.parse(film.release_date)\n    );\n\n    if (filmUpcomingRelease.length === 0) {\n      renderMarkupError();\n\n      return;\n    }\n\n    const random = Math.floor(Math.random() * filmUpcomingRelease.length);\n    const render = createMarkup(filmUpcomingRelease[random]);\n\n    // const random = Math.floor(Math.random() * (results.length-1));\n    // const render = createMarkup(results[random]);\n\n    renderMarkup(render);\n\n    const buttonAdd = document.getElementById('add');\n    const buttonRemove = document.getElementById('remove');\n\n    let existing = getAddedMovies();\n    existing = existing ? existing : [];\n    if (existing.includes(filmUpcomingRelease[random].id)) {\n      buttonAdd.classList.add('hidden');\n      buttonRemove.classList.remove('hidden');\n    }\n\n    buttonAdd.addEventListener('click', onClickAdd);\n    buttonRemove.addEventListener('click', onClickRemove);\n\n    function onClickAdd() {\n      let existing = getAddedMovies();\n      existing = existing ? existing : [];\n      if (existing.includes(filmUpcomingRelease[random].id)) {\n        buttonAdd.classList.add('hidden');\n        buttonRemove.classList.remove('hidden');\n        return;\n      }\n      existing.push(filmUpcomingRelease[random].id);\n      setAddedMovies(existing);\n      buttonAdd.classList.add('hidden');\n      buttonRemove.classList.remove('hidden');\n    }\n\n    function onClickRemove() {\n      let existing = getAddedMovies();\n      existing = existing ? existing : [];\n      if (existing.includes(filmUpcomingRelease[random].id)) {\n        let index = existing.findIndex(\n          id => id === filmUpcomingRelease[random].id\n        );\n\n        existing.splice(index, 1);\n        setAddedMovies(existing);\n        buttonAdd.classList.remove('hidden');\n        buttonRemove.classList.add('hidden');\n      }\n    }\n  })\n  .catch(error => console.log(error));\n\nsetGenresInStorage();\n\nfunction createMarkup({\n  backdrop_path,\n  genre_ids,\n  title,\n  overview,\n  vote_average,\n  vote_count,\n  release_date,\n  popularity,\n}) {\n  const vote = vote_average.toFixed(1);\n  const populate = popularity.toFixed(1);\n  const genres = getNameOfGenresById(genre_ids).slice(0, 3).join(' ');\n\n  return `\n      <img\n        class=\"upcoming-content__img\"\n        src=\"https://image.tmdb.org/t/p/w500${backdrop_path}\"\n        alt=\"${title}\"\n       \n      \n      />\n\n      <div class=\"upcoming-content__desktop\">\n        <h3 class=\"upcoming-content__name\">${title}</h3>\n\n        <div class=\"upcoming-thumb\">\n          <ul class=\"upcoming-list left\">\n            <li class=\"upcoming-list__item\">\n              <p class=\"upcoming-list__text\">Release date</p>\n              <p class=\"upcoming-list__date\">${release_date}</p>\n            </li>\n            <li class=\"upcoming-list__item\">\n              <p class=\"upcoming-list__text\">Vote / Votes</p>\n              <p class=\"upcoming-list__vote\">\n                <span class=\"vote\"> ${vote}</span> / <span class=\"vote\">${vote_count}</span>\n              </p>\n            </li>\n          </ul>\n\n          <ul class=\"upcoming-list rigth\">\n            <li class=\"upcoming-list__item\">\n              <p class=\"upcoming-list__text\">Popularity</p>\n              <p class=\"upcoming-list__pop\">${populate}</p>\n            </li>\n            <li class=\"upcoming-list__item\">\n              <p class=\"upcoming-list__text\">Genre</p>\n              <p class=\"upcoming-list__genre\">${genres}</p>\n            </li>\n          </ul>\n        </div>\n\n        <h3 class=\"upcoming-content__title\">About</h3>\n        <p class=\"upcoming-content__text\">${overview}\n        </p>\n\n  <button type=\"button\" class=\"upcoming-content__btn\" id=\"add\">\n  Remind me\n</button>   \n <button type=\"button\" class=\"upcoming-content__btn-remove hidden\" id=\"remove\">\n  Remove from my library\n</button>    \n`;\n}\n\nfunction renderMarkup(markup) {\n  container.innerHTML = markup;\n}\n\nfunction renderMarkupError() {\n  container.innerHTML = `<div class=\"upcoming-error-container\">\n        <p class=\"upcoming-error-container__text\">\n          OOPS...<br />\n          We are very sorry!<br />\n          But we couldn't find any upcoming movies this month.\n        </p>\n      </div>`;\n}\n"],"names":["parcelRequire","register","JSON","parse","$46d2c7eb99a96c05$var$notificationBtnClose","document","querySelector","$46d2c7eb99a96c05$var$notificationTrailerFailOverlay","$46d2c7eb99a96c05$var$onNotificationTrailerFailBtnClick","$46d2c7eb99a96c05$var$onCloseModal","style","visibility","$46d2c7eb99a96c05$var$onEscKeyPress","event","code","removeEventListener","addEventListener","transition","currentTarget","target","$bpxeT","getBundleURL","resolve","$bdd6ef7977612ae8$var$filmList","$bdd6ef7977612ae8$var$renderWeeklyFilms","window","innerWidth","$b7ONl","getWeekTrending","then","data1","$bdd6ef7977612ae8$var$creatMarkupCatalogCard","results","data","innerHTML","catch","error","console","log","data2","slice","$bdd6ef7977612ae8$var$_creatMarkupCatalogCard","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","markUp","reduce","markup","film","$bdd6ef7977612ae8$var$makeCard","param","id","poster_path","title","name","genre_ids","release_date","first_air_date","vote_average","arrOfGenres","$lwvvG","getNameOfGenresById","stringOfGenres","join","date","matchMedia","matches","length","concat","$bdd6ef7977612ae8$var$convertReleaseDate","$e84ace7ea33f9bcd$var$container","getUpcoming","NOW_Date","Date","filmUpcomingRelease","filter","random","Math","floor","render","backdrop_path","overview","vote_count","popularity","vote","toFixed","populate","genres","$e84ace7ea33f9bcd$var$createMarkup","buttonAdd","getElementById","buttonRemove","existing1","$4LMMA","getAddedMovies","includes","classList","add","remove","existing","push","setAddedMovies","index","findIndex","splice","setGenresInStorage"],"version":3,"file":"index.da91c2a4.js.map"}