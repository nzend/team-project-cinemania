{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,gBCAAD,EAAAC,EAAA,S,kCAGsBC,EAAwBC,G,OAAxBC,EAAuBC,MAAAC,KAAAC,U,UAAvBH,I,OAAAA,EAAfI,EAAAR,EAAA,CAAAQ,EAAAC,GAAAC,MAAA,SAAAC,EAAuCR,G,IACtCS,E,yEAAAA,EAAST,EACZU,MAAM,EAAG,IACTC,QAAO,SAACC,EAAQC,G,OAASD,EAASE,EAASD,E,GAAO,I,kBAC9CJ,G,4CAJoCP,MAAAC,KAAAC,U,CAShB,SAApBU,EAASC,G,IAChBC,EADgBD,EAChBC,GACAC,EAFgBF,EAEhBE,YACAC,EAHgBH,EAGhBG,MACAC,EAJgBJ,EAIhBI,KACAC,EALgBL,EAKhBK,UACAC,EANgBN,EAMhBM,aACAC,EAPgBP,EAOhBO,eACAC,EARgBR,EAQhBQ,aAEMC,GAAc,EAAAC,EAAAC,qBAAoBN,GACpCO,EAAiBH,EAAYd,MAAM,EAAG,GAAGkB,KAAK,MAC5CC,EAAOR,GAAgBC,EAc7B,OAbmBQ,OAAOC,WACxB,8CAIaC,UACbL,EAAiBH,EAAYd,MAAM,EAAG,GAAGkB,KAAK,OAI5CD,EAAeM,OAAS,KAC1BN,EAAiBH,EAAYd,MAAM,EAAG,GAAGkB,KAAK,OAEzC,sCAGDM,OAHuClB,EAAG,+FAIlCkB,OADRjB,GAAe,yCAChB,WAGwBiB,OAHff,GAAQD,EAAM,uIAMEgB,OAHDf,GAAQD,EAAM,mGAIbgB,OADAP,EAAe,yCAKzCO,OASN,SAA4BL,GAC1B,OAAIA,EACKA,EAAKnB,MAAM,EAAG,GACT,E,CAhBgByB,CAAmBN,GAAM,oHAKpDK,OADCX,EAAe,EAAI,IACpB,yD,kBDnDCa,EAAaC,SAASC,cAAc,YACpCC,EAAYF,SAASC,cAAc,iBACnCE,EAAQH,SAASC,cAAc,mB,SAKtBG,I,OAAAA,EAAfpC,EAAAR,EAAA,CAAAQ,EAAAC,GAAAC,MAAA,SAAAC,EAA2BkC,G,IAEjBC,EAEAC,E,kFAFAD,EAASH,EAAMK,MAAMC,O,SAEFC,EAAAC,YAAgBL,EAAQ,G,OAA3CC,EAAUK,EAAAC,KAGhBnD,EAFqB6C,EAAWO,SAEMC,MACpC,SAAApD,G,OAASoC,EAAWiB,UAAYrD,C,IAGf,KAAhBwC,EAAMK,OACPE,EAAAO,gBAAoB,GAAGF,MAAK,SAAAG,GAG1BxD,EAFcwD,EAAKJ,SAGhBC,MAAK,SAAApD,G,OAASoC,EAAWiB,UAAYrD,C,IACrCwD,OAAM,SAAAC,G,OAASC,QAAQC,IAAIF,E,yDAKlCC,QAAQC,IAAGV,EAAAW,I,2DAtBW1D,MAAAC,KAAAC,U,CAH1BmC,EAAUsB,iBAAiB,S,SAGAnB,G,OAAZD,EAAWvC,MAAAC,KAAAC,U,IA2B1B2C,EAAAO,gBAAoB,GAAGF,MAAK,SAAAU,GAI1B/D,EAHc+D,EAAKX,SAIhBC,MAAK,SAAApD,G,OAASoC,EAAWiB,UAAYrD,C,IACrCwD,OAAM,SAAAC,G,OAASC,QAAQC,IAAIF,E","sources":["src/js/render-catalog.js","src/js/markup-catalog.js"],"sourcesContent":["import { createMarkupCatalogCard } from './markup-catalog';\nimport * as Api from './api';\n\nconst catalogRef = document.querySelector('.catalog');\nconst btnSearch = document.querySelector('.catalog__btn');\nconst input = document.querySelector('.catalog__input');\n\nbtnSearch.addEventListener('click', onBtnSearch);\n\n// Виконує запит по введеній назві\nasync function onBtnSearch(e) {\n  try {\n    const search = input.value.trim();\n\n    const searchData = await Api.getBySearch(search, 1);\n    const searchResult = searchData.results;\n\n    createMarkupCatalogCard(searchResult).then(\n      data => (catalogRef.innerHTML = data)\n\t );\n\t  \n\t  if (input.value === '') {\n      Api.getWeekTrending(1).then(data => {\n        const films = data.results;\n\n        createMarkupCatalogCard(films)\n          .then(data => (catalogRef.innerHTML = data))\n          .catch(error => console.log(error));\n      });\n    }\n\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n//  Рендерить за замовчування фільми за трендом тижня\nApi.getWeekTrending(1).then(data => {\n  const films = data.results;\n\t\n\t\n  createMarkupCatalogCard(films)\n    .then(data => (catalogRef.innerHTML = data))\n    .catch(error => console.log(error));\n});\n\n","import { getNameOfGenresById } from './get-genres';\n\n// Створює строку розмітки усих карточок фільмів\nexport async function createMarkupCatalogCard(data) {\n  const markUp = data\n    .slice(0, 10)\n    .reduce((markup, film) => markup + makeCard(film), '');\n  return markUp;\n}\n\n\n// Створює розмітку карточки фільму\nfunction makeCard({\n  id,\n  poster_path,\n  title,\n  name,\n  genre_ids,\n  release_date,\n  first_air_date,\n  vote_average,\n}) {\n  const arrOfGenres = getNameOfGenresById(genre_ids);\n  let stringOfGenres = arrOfGenres.slice(0, 2).join(', ');\n  const date = release_date || first_air_date;\n  const mediaQuery = window.matchMedia(\n    '(min-width: 768px) and (max-width: 1199px)'\n  );\n\n  // На таблетці відображає один жанр\n  if (mediaQuery.matches) {\n    stringOfGenres = arrOfGenres.slice(0, 1).join(', ');\n  }\n\n  // Якшо строка жанрів більша, рендерити один жанр\n  if (stringOfGenres.length > 18)\n    stringOfGenres = arrOfGenres.slice(0, 1).join(', ');\n\n  return `<li class=\"catalog__card\" data-id=\"${id}\">\n    <div class=\"catalog__img-wrapper\">\n      <img src=\"https://image.tmdb.org/t/p/w500${\n        poster_path || 'Oops. There is no poster to this movie'\n      }\" alt=\"${name || title}\" width=\"395\" height=\"574\" class=\"catalog__img\" />\n    </div>\n    <div class=\"catalog__info info\">\n      <p class=\"info__title\">${name || title}</p>\n\t\t<div class=\"info__wrap\">\n\t\t<ul class=\"info__list\">\n      <li class=\"info__descr\">${stringOfGenres}</li>\n      <li class=\"info__descr\">${convertReleaseDate(date)}</li>\n      </ul>\n\t\t<div class=\"catalog__stars-wrap\">\n\t\t<div class=\"catalog__rating-active\" style=\"width:${\n      vote_average / 2 / 0.05\n    }%\"></div>\n\t\t</div>\n\t\t</div>\n    </div>\n  </li>`;\n}\n\n// Повертає з отриманої дати рік\nfunction convertReleaseDate(date) {\n  if (date) {\n    return date.slice(0, 4);\n  } else return '';\n}\n"],"names":["$bpxeT","parcelRequire","$fa0a930364e66a11$export$833af1f29fa6051f","data","$fa0a930364e66a11$var$_createMarkupCatalogCard","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","markUp","slice","reduce","markup","film","$fa0a930364e66a11$var$makeCard","param","id","poster_path","title","name","genre_ids","release_date","first_air_date","vote_average","arrOfGenres","$lwvvG","getNameOfGenresById","stringOfGenres","join","date","window","matchMedia","matches","length","concat","$fa0a930364e66a11$var$convertReleaseDate","$be0fd4a127562894$var$catalogRef","document","querySelector","$be0fd4a127562894$var$btnSearch","$be0fd4a127562894$var$input","$be0fd4a127562894$var$_onBtnSearch","e","search","searchData","value","trim","$b7ONl","getBySearch","_ctx","sent","results","then","innerHTML","getWeekTrending","data1","catch","error","console","log","t0","addEventListener","data2"],"version":3,"file":"catalog.29d41e20.js.map"}